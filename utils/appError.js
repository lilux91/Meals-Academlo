//1. DEFINIR LA CLASE Y HACERLA QUE HEREDE DE LOS ERRORES
//INCORPORADOS EN LA APP
class AppError extends Error {
  //2. DEFINIR EL CONSTRUCTOR AL CUAL LE VAMOS A PASAR EL
  // MENSAJE Y CODIGO DE ESTADO
  constructor(message, statusCode) {
    //3. COMO EXTENDIMOS LA CLASE, DEBEMOS UTILIZAR SUPER PARA LLAMAR
    // AL CONSTRUCTOR PADRE, Y LE ENVIAMOS EL MENSAJE PUESTO QUE ES EL
    //UNICO PARAMETRO QUE ACEPTA EL ERROR INCORPORADO
    super(message);

    //5. ESTABLECEMOS LA PROPIEDAD DEL CODIGO DE ESTADO
    this.statusCode = statusCode;
    //6. ESTABLECEMOS EL ESTADO DE ERROR, DONDE PUEDE SER 'error' SI
    //ES UN ERROR PROVENIENTE DEL CLIENTE O 'fail' SI ES UN ERROR
    //PROVENIENTE DEL SERVIDOR.
    this.status = `${statusCode}`.startsWith('4') ? 'error' : 'fail';
    //7. DEFINIR QUE SEA UN ERROR OPERACIONAL
    this.isOperational = true;

    //8. CAPTURAR EL SEGUIMIENTO DE LA PILA DE ERRORES, QUE ES UN SEGUIMIENTO
    //QUE HACE LA APLICACIÃ“N PARA SABER DONDE OCURRE UN ERROR Y QUE ES ESE ERROR
    //Y NECESITAMOS PASARLE EL OBJETO ACTUAL, Y LUEGO LA CLASE AppError QUE SERA EL CONSTRUCTOR
    Error.captureStackTrace(this, this.constructor);
  }
}

module.exports = AppError;
